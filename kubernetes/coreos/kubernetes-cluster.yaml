#cloud-config

write_files:
  - path: /etc/weave.env
    permissions: '0600'
    owner: root
    content: |
      #WEAVE_PEERS="172.17.8.101 172.17.8.102 172.17.8.103"
      # Uncomment and make it more secure
      # WEAVE_PASSWORD="aVeryLongString"

  - path: /etc/weave-hyperkube.env
    permissions: '0600'
    owner: root
    content: |
      DOCKER_HOST="unix:///var/run/weave/weave.sock"
      HYPERKUBE_IMG="gcr.io/google_containers/hyperkube:v1.0.6"

coreos:
  update:
    group: stable
    reboot-strategy: 'off'

  etcd2:
    name: '$public_ipv4'
    initial-cluster-token: 'etcd-cluster'
    initial-advertise-peer-urls: 'http://$public_ipv4:2380'
    listen-peer-urls: 'http://$public_ipv4:2380'
    listen-client-urls: 'http://0.0.0.0:2379,http://0.0.0.0:4001'
    advertise-client-urls: 'http://$public_ipv4:2379,http://$public_ipv4:4001'
    initial-cluster-state: 'new'
    initial-cluster: '172.17.8.101=http://172.17.8.101:2380'
    #initial-cluster: '172.17.8.101=http://172.17.8.101:2380,172.17.8.102=http://172.17.8.102:2380,172.17.8.103=http://172.17.8.103:2380'

  units:
    - name: systemd-networkd-wait-online.service
      drop-ins:
        - name: 50-check-github-is-reachable.conf
          content: |
            [Service]
            ExecStart=/bin/sh -x -c \
              'until curl --silent --fail https://status.github.com/api/status.json | grep -q \"good\"; do sleep 2; done'

    - name: etcd2.service
      command: start

    - name: weave-network.target
      enable: true
      content: |
        [Unit]
        Description=Weave Network Setup Complete
        Documentation=man:systemd.special(7)
        RefuseManualStart=no
        After=network-online.target
        [Install]
        WantedBy=multi-user.target
        WantedBy=kubernetes-master.target
        WantedBy=kubernetes-node.target

    - name: kubernetes-master.target
      enable: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Cluster Master
        Documentation=http://kubernetes.io/
        RefuseManualStart=no
        After=weave-network.target
        Requires=weave-network.target
        ConditionHost=kube-01
        Wants=kube-apiserver.service
        Wants=kube-scheduler.service
        Wants=kube-controller-manager.service
        Wants=kube-proxy.service
        [Install]
        WantedBy=multi-user.target

    - name: kubernetes-node.target
      enable: true
      command: start
      content: |
        [Unit]
        Description=Kubernetes Cluster Node
        Documentation=http://kubernetes.io/
        RefuseManualStart=no
        After=weave-network.target
        Requires=weave-network.target
        ConditionHost=!kube-01
        Wants=kube-proxy.service
        Wants=kubelet.service
        [Install]
        WantedBy=multi-user.target

    - name: 10-weave.network
      runtime: false
      content: |
        [Match]
        Type=bridge
        Name=weave*
        [Network]

    - name: install-weave.service
      enable: true
      content: |
        [Unit]
        After=network-online.target
        After=docker.service
        Before=weave.service
        Description=Install Weave
        Documentation=http://docs.weave.works/
        Requires=network-online.target
        [Service]
        EnvironmentFile=-/etc/weave.%H.env
        EnvironmentFile=-/etc/weave.env
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=0
        ExecStartPre=/bin/mkdir -p /opt/bin/
        ExecStartPre=/usr/bin/curl \
          --silent \
          --location \
          git.io/weave \
          --output /opt/bin/weave
        ExecStartPre=/usr/bin/chmod +x /opt/bin/weave
        ExecStart=/opt/bin/weave setup
        [Install]
        WantedBy=weave-network.target
        WantedBy=weave.service

    - name: weaveproxy.service
      enable: true
      content: |
        [Unit]
        After=install-weave.service
        After=docker.service
        Description=Weave proxy for Docker API
        Documentation=http://docs.weave.works/
        Requires=docker.service
        Requires=install-weave.service
        [Service]
        EnvironmentFile=-/etc/weave.%H.env
        EnvironmentFile=-/etc/weave.env
        ExecStartPre=/opt/bin/weave launch-proxy --rewrite-inspect
        ExecStart=/usr/bin/docker attach weaveproxy
        Restart=on-failure
        ExecStop=/opt/bin/weave stop-proxy
        [Install]
        WantedBy=weave-network.target

    - name: weave.service
      enable: true
      content: |
        [Unit]
        After=install-weave.service
        After=docker.service
        Description=Weave Network Router
        Documentation=http://docs.weave.works/
        Requires=docker.service
        Requires=install-weave.service
        [Service]
        TimeoutStartSec=0
        EnvironmentFile=-/etc/weave.%H.env
        EnvironmentFile=-/etc/weave.env
        ExecStartPre=/opt/bin/weave launch-router $WEAVE_PEERS
        ExecStart=/usr/bin/docker attach weave
        Restart=on-failure
        ExecStop=/opt/bin/weave stop-router
        [Install]
        WantedBy=weave-network.target

    - name: weave-expose.service
      enable: true
      content: |
        [Unit]
        After=install-weave.service
        After=weave.service
        After=docker.service
        Documentation=http://docs.weave.works/
        Requires=docker.service
        Requires=install-weave.service
        Requires=weave.service
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=0
        EnvironmentFile=-/etc/weave.%H.env
        EnvironmentFile=-/etc/weave.env
        ExecStart=/opt/bin/weave expose -h %H.weave.local
        ExecStop=/opt/bin/weave hide
        [Install]
        WantedBy=weave-network.target

    - name: kube-apiserver.service
      enable: true
      content: |
        [Unit]
        After=etcd2.service
        Before=kube-controller-manager.service
        Before=kube-scheduler.service
        Description=Kubernetes API Server
        Documentation=http://kubernetes.io/
        Wants=etcd2.service
        ConditionHost=kube-01
        [Service]
        EnvironmentFile=/etc/weave-hyperkube.env
        ExecStartPre=-/usr/bin/docker rm -f kube-apiserver
        ExecStart=/usr/bin/docker run \
            --name kube-apiserver \
            $HYPERKUBE_IMG bash -x -c \
              "weave_ip=`hostname -i`; /hyperkube apiserver --insecure-bind-address=$weave_ip --advertise-address=$weave_ip --external-hostname=kube-apiserver.weave.local --port=8080 --etcd-servers=http://172.17.8.101:4001 --service-cluster-ip-range=10.16.0.0/12 --cloud-provider=vagrant --logtostderr=true"
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-master.target

    - name: kube-scheduler.service
      enable: true
      content: |
        [Unit]
        After=kube-apiserver.service
        Description=Kubernetes Scheduler
        Documentation=http://kubernetes.io/
        Wants=kube-apiserver.service
        ConditionHost=kube-01
        [Service]
        EnvironmentFile=/etc/weave-hyperkube.env
        ExecStartPre=-/usr/bin/docker rm -f kube-scheduler
        ExecStart=/usr/bin/docker run \
            --name kube-scheduler \
            $HYPERKUBE_IMG /hyperkube scheduler \
            --master=http://kube-apiserver.weave.local:8080 \
            --logtostderr=true
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-master.target

    - name: kube-controller-manager.service
      enable: true
      content: |
        [Unit]
        After=etcd2.service
        After=kube-apiserver.service
        Description=Kubernetes Controller Manager
        Documentation=http://kubernetes.io/
        Wants=kube-apiserver.service
        Wants=etcd2.service
        ConditionHost=kube-01
        [Service]
        EnvironmentFile=/etc/weave-hyperkube.env
        ExecStartPre=-/usr/bin/docker rm -f kube-controller-manager
        ExecStart=/usr/bin/docker run \
            --name kube-controller-manager \
            $HYPERKUBE_IMG /hyperkube controller-manager \
            --cloud_provider=vagrant \
            --master=http://kube-apiserver.weave.local:8080 \
            --logtostderr=true
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-master.target

    - name: kubelet.service
      enable: true
      content: |
        [Unit]
        After=etcd2.service
        Description=Kubernetes Kubelet
        Documentation=http://kubernetes.io/
        Wants=etcd2.service
        ConditionHost=!kube-01
        [Service]
        ExecStartPre=/bin/mkdir -p /etc/kubernetes/manifests/
        ExecStart=/opt/kubernetes/server/bin/kubelet \
            --docker-endpoint=unix:/var/run/weave/weave.sock \
            --address=$public_ipv4 \
            --port=10250 \
            --hostname-override=$public_ipv4 \
            --api-servers=http://172.17.8.101:8080 \
            --logtostderr=true \
            --cluster-dns=10.16.0.3 \
            --cluster-domain=kube.local \
            --config=/etc/kubernetes/manifests/
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-node.target

    - name: kube-proxy.service
      enable: true
      content: |
        [Unit]
        After=etcd2.service
        Description=Kubernetes Proxy
        Documentation=http://kubernetes.io/
        Wants=etcd2.service
        [Service]
        ExecStart=/opt/kubernetes/server/bin/kube-proxy \
            --master=http://kube-apiserver.weave.local:8080 \
            --logtostderr=true
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=kubernetes-master.target
        WantedBy=kubernetes-node.target

    #- name: kube-create-addons.service
    #  enable: true
    #  content: |
    #    [Unit]
    #    ConditionPathIsDirectory=/etc/kubernetes/addons/
    #    ConditionHost=kube-01
    #    Description=Kubernetes Addons
    #    Documentation=http://kubernetes.io/
    #    Wants=kube-apiserver.service
    #    [Service]
    #    Type=oneshot
    #    RemainAfterExit=no
    #    ExecStart=/bin/bash -c 'until /opt/kubernetes/server/bin/kubectl create -f /etc/kubernetes/addons/; do sleep 2; done'
    #    SuccessExitStatus=1
    #    [Install]
    #    WantedBy=kubernetes-master.target
